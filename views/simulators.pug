extends layout

block content

    #title
      <br>
      h1 #{translations[locale].Simulators.Title}

    //-   #mainservices
    //- .pcontainersimulators
    //-   img.pimagesimulators(src='https://res.cloudinary.com/hmfinance/image/upload/v1581694268/Site/1_phyg0f_flgctk.jpg', data-speed='-2')
    
    form(id="simulatorSS")
      .simulator
        .simulator-group
          br
          h2 #{translations[locale].Simulators.Titles.SS}

        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.SS_Trab}
          .simulator-element
            select(id="workers")
              option(value="TI") #{translations[locale].Simulators.Options.SS_Trab1}
              option(value="ENI") #{translations[locale].Simulators.Options.SS_Trab2}
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.SS_Regi}
          .simulator-element
            select(id="regime")
              option(value="Simp") #{translations[locale].Simulators.Options.SS_Regi1}
              option(value="CO") #{translations[locale].Simulators.Options.SS_Regi2}
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.SS_Acti}
          .simulator-element
            select(id="monthsOfActivity")
              option(value=">12") #{translations[locale].Simulators.Options.SS_Acti1}
              option(value="<=12") #{translations[locale].Simulators.Options.SS_Acti2}
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.SS_TiAc}
          .simulator-element
            select(id="typeOfActivity")
              option(value="Work Contract") #{translations[locale].Simulators.Options.SS_TiAc1}
              option(value="Freela") #{translations[locale].Simulators.Options.SS_TiAc2}
              option(value="Pensionist") #{translations[locale].Simulators.Options.SS_TiAc3} 
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.SS_OthC}
          .simulator-element
            input(type="text" id="grossWage")
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.SS_LuAn}
          .simulator-element
            input(type="text" id="profitYear")
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.SS_RBAS}
          .simulator-element
            input(type="text" id="profitYearServices")
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.SS_RBAM}
          .simulator-element
            input(type="text" id="profitYearMerchandise")
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.SS_RBAO}
          .simulator-element
            input(type="text" id="profitYearOthers")
        .simulator-group
          input(type="submit" value=`${translations[locale].Simulators.Categories.Button_Calc}`)
          
        .simulator-group
          .simulator-element
            br
            h3 #{translations[locale].Simulators.Categories.Result}
            br
          .simulator-element
            br
            h3(id="output")
            br
    form(id="simulatorMV")
      .simulator
        .simulator-group
          br
          h2 #{translations[locale].Simulators.Titles.MV}
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.MV_VaAq}
          .simulator-element
            input(type="text" id="acquisitionValue")
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.MV_AnAq}
          .simulator-element
            select(id="acquisitionYear")
              option(value=maisValias[0].year) #{maisValias[0].year}
              option(value=maisValias[1].year) #{maisValias[1].year}
              option(value=maisValias[2].year) #{maisValias[2].year}
              option(value=maisValias[3].year) #{maisValias[3].year}
              option(value=maisValias[4].year) #{maisValias[4].year}
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.MV_VaVe}
          .simulator-element
            input(type="text" id="saleValue")
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.MV_AnVe}
          .simulator-element
            select(id="acquisitionYear")
              option(value=2020) 2020
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.MV_Desp}
          .simulator-element
            input(type="text" id="expenses")
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.MV_EsRe}
          .simulator-element
            select(id="estadoResidencia")
              option(value="residente") #{translations[locale].Simulators.Options.MV_EsRe1}
              option(value="naoResidente") #{translations[locale].Simulators.Options.MV_EsRe2}
        .simulator-group
          input(type="submit" value=`${translations[locale].Simulators.Categories.Button_Calc}`)
        
        .simulator-group
          .simulator-element
            <br>
            h3 #{translations[locale].Simulators.Categories.Result}
            br
          .simulator-element
            br
            h3(id="outputMaisValias")
            br

    form(id="simulatorIMT")
      .simulator
        .simulator-group
          br
          h2 #{translations[locale].Simulators.Titles.IMT}
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.IMT_Loca}
          .simulator-element
            select(id="location") 
              option(value='PC') #{translations[locale].Simulators.Options.IMT_Loca1}
              option(value='RA') #{translations[locale].Simulators.Options.IMT_Loca2}
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.IMT_TpIm}
          .simulator-element
            select(id="type")
              option(value='HPP') #{translations[locale].Simulators.Options.IMT_TpIm1}
              option(value='HSA') #{translations[locale].Simulators.Options.IMT_TpIm2}
              option(value='Rustico') #{translations[locale].Simulators.Options.IMT_TpIm3}
              option(value='Outros') #{translations[locale].Simulators.Options.IMT_TpIm4}
        .simulator-group
          .simulator-element
            label #{translations[locale].Simulators.Categories.IMT_VaIM}
          .simulator-element
            input(type="text" id="imovelValue")
        .simulator-group
          input(type="submit" value="submit")
        
        .simulator-group
          .simulator-element
            br
            h3 #{translations[locale].Simulators.Categories.IMT_ReIM}
            br
          .simulator-element
            br
            h3(id="outputIMT")
            br
        .simulator-group
          .simulator-element
            br
            h3 #{translations[locale].Simulators.Categories.IMT_ReIS}
            br
          .simulator-element
            br
            h3(id="outputIS")
            br
          
        .simulator-group
          .simulator-element
            <br>
            h3 #{translations[locale].Simulators.Categories.Result}
            <br>
          .simulator-element
            br
            h3(id="outputTotal")
            br
  
    script.
      $("textarea#question").focus(function() {
      $(this).val("")
      }),
      $(".pimagesimulators").each(function() {
      var c = $(this),
      e = $(this).parent();
      function s() {
      var s = c.data("speed"),
      o = e.offset().top,
      r = $(this).scrollTop(),
      i = $(this).height(),
      l = e.innerHeight(),
      d = r + i;
      if (o < d && r < o + l) var a = (d - o) * s / (i + l) * 100 + (50 - 50 * s);
      c.css({
      top: a + "%",
      transform: "translate(-50%, -" + a + "%)"
      })
      }
      $(document).on({
      scroll: function() {
      s()
      },
      ready: function() {
      s()
      }
      })
      }),
      function(a, r) {
      a.fn.inViewport = function(d) {
      return this.each(function(s, l) {
      function o() {
      var s = a(this).height(),
      o = l.getBoundingClientRect(),
      r = o.top,
      i = o.bottom;
      return d.call(l, Math.max(0, 0 < r ? s - r : i < s ? i : s))
      }
      o(), a(r).on("resize scroll", o)
      })
      }
      }


    script.
      const IMT = !{JSON.stringify(IMT)};
      const IStax = !{JSON.stringify(IStax)};
    script(src='/javascripts/IMTsimulator.js')

    script.
      const maisValias = !{JSON.stringify(maisValias)}
    script(src='/javascripts/maisValiasSimulator.js')

    script.
      const simulator = !{JSON.stringify(simulator[0])}
    script(src='/javascripts/SimulatorSS.js')

    




