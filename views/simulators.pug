doctype html
html
  head
    //- Meta Tag Google
    title Simuladores Financeiros HM Finance
    meta(charset='UTF-8')
    meta(name='description' content='Simulador de segurança social, simulador de mais valias e simulador de IMT')
    meta(name='viewport', content='width=device-width, initial-scale=1, shrink-to-fit=no')

    //- Meta Tags Facebook (Quanto tivermos o URL final descomentar e adicionar + adicionar imagens à cloud para termos URL e ficar acessível ao Facebook)
    //- meta(property="og:url" content="http://www.nytimes.com/2015/02/19/arts/international/when-great-minds-dont-think-alike.html")
    meta(property="og:title" content="Simuladores Financeiros HM Finance")
    meta(property="og:description" content="Simulador de segurança social, simulador de mais valias e simulador de IMT")
    //- meta(property="og:image" content="http://static01.nyt.com/images/2015/02/19/arts/international/19iht-btnumbers19A/19iht-btnumbers19A-facebookJumbo-v2.jpg")

    link(rel='stylesheet', href='/stylesheets/homepage.css')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.2.2/jquery.min.js')
    script.
      $(document).ready(function(){
        $("#menubutton").click(function(){
            $("#navbar").slideToggle();
        });
      });
      $(document).ready(function(){
        $("#navbar").click(function(){
            $("#navbar").slideToggle();
        });
      });

  body

    #menubuttondiv
      img#menubutton(src='https://res.cloudinary.com/hmfinance/image/upload/v1581699410/Site/menu_gbcjny_l54ey3.png')
    #langbuttondiv
      a(href='/setlanguage/pt')
        img#langbutton(src='https://res.cloudinary.com/hmfinance/image/upload/v1581694267/Site/langpt_g1kkml.png')
      a(href='/setlanguage/en')
        img#langbutton(src='https://res.cloudinary.com/hmfinance/image/upload/v1581694267/Site/langen_xhjegj.png')
    #navbar  
      ul
        li
          a#homeid(href='/#home') #{translations[locale].SectionsTitles.HMFinance}
        li
          a(href='/#clients') #{translations[locale].SectionsTitles.Clients}
        li
          a(href='/#services') #{translations[locale].SectionsTitles.Services}
        li
          a(href='/#simulators') #{translations[locale].SectionsTitles.Simulators}
        li
          a(href='/#contactus') #{translations[locale].SectionsTitles.ContactUs}
        li
          a(href='/#reviews') #{translations[locale].SectionsTitles.Reviews}


    #title
      <br>
      h1 #{translations[locale].Simulators.Title}
      block content

      #mainservices
    .pcontainersimulators
      img.pimagesimulators(src='https://res.cloudinary.com/hmfinance/image/upload/v1581694268/Site/1_phyg0f_flgctk.jpg', data-speed='-2')
    
    form(id="simulatorSS")
      .simulatorsgsgrid
        .simulatorsgsgrid1
          br
          h3 #{translations[locale].Simulators.Titles.SS}

        .simulatorsgsgrid2
          label #{translations[locale].Simulators.Categories.SS_Trab}
        .simulatorsgsgrid3
          select(id="workers")
            option(value="TI") #{translations[locale].Simulators.Options.SS_Trab1}
            option(value="ENI") #{translations[locale].Simulators.Options.SS_Trab2}
        .simulatorsgsgrid4
          label #{translations[locale].Simulators.Categories.SS_Regi}
        .simulatorsgsgrid5
          select(id="regime")
            option(value="Simp") #{translations[locale].Simulators.Options.SS_Regi1}
            option(value="CO") #{translations[locale].Simulators.Options.SS_Regi2}
        .simulatorsgsgrid6
          label #{translations[locale].Simulators.Categories.SS_Acti}
        .simulatorsgsgrid7
          select(id="monthsOfActivity")
            option(value=">12") #{translations[locale].Simulators.Options.SS_Acti1}
            option(value="<=12") #{translations[locale].Simulators.Options.SS_Acti2}
        .simulatorsgsgrid8
          label #{translations[locale].Simulators.Categories.SS_TiAc}
        .simulatorsgsgrid9
          select(id="typeOfActivity")
            option(value="Work Contract") #{translations[locale].Simulators.Options.SS_TiAc1}
            option(value="Freela") #{translations[locale].Simulators.Options.SS_TiAc2}
            option(value="Pensionist") #{translations[locale].Simulators.Options.SS_TiAc3} 
        .simulatorsgsgrid10
          label #{translations[locale].Simulators.Categories.SS_OthC}
        .simulatorsgsgrid11
          input(type="text" id="grossWage")
        .simulatorsgsgrid12
          label #{translations[locale].Simulators.Categories.SS_LuAn}
        .simulatorsgsgrid13
          input(type="text" id="profitYear")
        .simulatorsgsgrid14
          label #{translations[locale].Simulators.Categories.SS_RBAS}
        .simulatorsgsgrid15
          input(type="text" id="profitYearServices")
        .simulatorsgsgrid16
          label #{translations[locale].Simulators.Categories.SS_RBAM}
        .simulatorsgsgrid17
          input(type="text" id="profitYearMerchandise")
        .simulatorsgsgrid18
          label #{translations[locale].Simulators.Categories.SS_RBAO}
        .simulatorsgsgrid19
          input(type="text" id="profitYearOthers")
        .simulatorsgsgrid20
          input(type="submit" value=translations[locale].Simulators.Categories.Button_Calc)
          
        .simulatorsgsgrid21
          br
          h3 #{translations[locale].Simulators.Categories.Result}
          br
        .simulatorsgsgrid22
          br
          h3(id="output")
          br
    form(id="maisValiasSimulator")
      .simulatormvagrid
        .simulatormvagrid1
          br
          h3 #{translations[locale].Simulators.Titles.MV}
        .simulatormvagrid2
          label #{translations[locale].Simulators.Categories.MV_VaAq}
        .simulatormvagrid3
          input(type="text" id="acquisitionValue")
        .simulatormvagrid4
          label #{translations[locale].Simulators.Categories.MV_AnAq}
        .simulatormvagrid5
          select(id="acquisitionYear")
            option(value=maisValias[0].year) #{maisValias[0].year}
            option(value=maisValias[1].year) #{maisValias[1].year}
            option(value=maisValias[2].year) #{maisValias[2].year}
            option(value=maisValias[3].year) #{maisValias[3].year}
            option(value=maisValias[4].year) #{maisValias[4].year}
        .simulatormvagrid6
          label #{translations[locale].Simulators.Categories.MV_VaVe}
        .simulatormvagrid7
          input(type="text" id="saleValue")
        .simulatormvagrid8
          label #{translations[locale].Simulators.Categories.MV_AnVe}
        .simulatormvagrid9
          select(id="acquisitionYear")
            option(value=2020) 2020
        .simulatormvagrid10
          label #{translations[locale].Simulators.Categories.MV_Desp}
        .simulatormvagrid11
          input(type="text" id="expenses")
        .simulatormvagrid12
          label #{translations[locale].Simulators.Categories.MV_EsRe}
        .simulatormvagrid13
          select(id="estadoResidencia")
            option(value="residente") #{translations[locale].Simulators.Options.MV_EsRe1}
            option(value="naoResidente") #{translations[locale].Simulators.Options.MV_EsRe2}
        .simulatormvagrid14
          input(type="submit" value=translations[locale].Simulators.Categories.Button_Calc)
        .simulatormvagrid15
          <br>
          h3 #{translations[locale].Simulators.Categories.Result}
          <br>
        .simulatormvagrid16
          br
          h3(id="outputMaisValias")
          br

    form(id="IMTSimulator")
      .simulatorimtgrid
        .simulatorimtgrid1
          br
          h3 #{translations[locale].Simulators.Titles.IMT}
        .simulatorimtgrid2
          label #{translations[locale].Simulators.Categories.IMT_Loca}
        .simulatorimtgrid3
          select(id="location") 
            option(value='PC') #{translations[locale].Simulators.Options.IMT_Loca1}
            option(value='RA') #{translations[locale].Simulators.Options.IMT_Loca2}
        .simulatorimtgrid4
          label #{translations[locale].Simulators.Categories.IMT_TpIm}
        .simulatorimtgrid5
          select(id="type")
            option(value='HPP') #{translations[locale].Simulators.Options.IMT_TpIm1}
            option(value='HSA') #{translations[locale].Simulators.Options.IMT_TpIm2}
            option(value='Rustico') #{translations[locale].Simulators.Options.IMT_TpIm3}
            option(value='Outros') #{translations[locale].Simulators.Options.IMT_TpIm4}
        .simulatorimtgrid6
          label #{translations[locale].Simulators.Categories.IMT_VaIM}
        .simulatorimtgrid7
          input(type="text" id="imovelValue")
        .simulatorimtgrid8
          input(type="submit" value=translations[locale].Simulators.Categories.Button_Calc)
        .simulatorimtgrid9
          <br>
          h3 #{translations[locale].Simulators.Categories.IMT_ReIM}
          <br>
        .simulatorimtgrid10
          br
          h3(id="outputIMT")
          br
        .simulatorimtgrid11
          <br>
          h3 #{translations[locale].Simulators.Categories.IMT_ReIS}
          <br>
        .simulatorimtgrid12
          br
          h3(id="outputIS")
          br
          
        .simulatorimtgrid13
          <br>
          h3 #{translations[locale].Simulators.Categories.Result}
          <br>
        .simulatorimtgrid14
          br
          h3(id="outputTotal")
          br

  script.
    $("textarea#question").focus(function() {
    $(this).val("")
    }),
    $(".pimagesimulators").each(function() {
    var c = $(this),
    e = $(this).parent();
    function s() {
    var s = c.data("speed"),
    o = e.offset().top,
    r = $(this).scrollTop(),
    i = $(this).height(),
    l = e.innerHeight(),
    d = r + i;
    if (o < d && r < o + l) var a = (d - o) * s / (i + l) * 100 + (50 - 50 * s);
    c.css({
    top: a + "%",
    transform: "translate(-50%, -" + a + "%)"
    })
    }
    $(document).on({
    scroll: function() {
    s()
    },
    ready: function() {
    s()
    }
    })
    }),
    function(a, r) {
    a.fn.inViewport = function(d) {
    return this.each(function(s, l) {
    function o() {
    var s = a(this).height(),
    o = l.getBoundingClientRect(),
    r = o.top,
    i = o.bottom;
    return d.call(l, Math.max(0, 0 < r ? s - r : i < s ? i : s))
    }
    o(), a(r).on("resize scroll", o)
    })
    }
    }

<!-- Passing the simulators (IMT, SS and MaisValias) to each js file to make the calculations -->
  script.
    const IMT = !{JSON.stringify(IMT)};
    const IStax = !{JSON.stringify(IStax)};
  script(src='/javascripts/IMTsimulator.js')


  script.
    const maisValias = !{JSON.stringify(maisValias)}
  script(src='/javascripts/maisValiasSimulator.js')


  script.
    const simulator = !{JSON.stringify(simulator[0])}
  script(src='/javascripts/SimulatorSS.js')

  




